[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_functions = test_*
python_classes = Test*

# Output formatting
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml

# Coverage settings
[coverage:run]
source = .
omit = 
    */tests/*
    */whisper_env/*
    */node_modules/*
    */venv/*
    setup.py
    scripts/utilities/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    performance: marks tests as performance benchmarks
    unit: marks tests as unit tests
    mock: marks tests that use mocking
    refactor: marks tests that validate refactoring safety
    startup: marks tests that validate startup requirements
    communication: marks tests that validate IPC and frontend-backend communication
    audio: marks tests that validate audio pipeline and VAD configuration
    visual_feedback: marks tests that validate audio visual feedback and GUI components 